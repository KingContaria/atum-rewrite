plugins {
    id "fabric-loom" version "$loom_version"
    id "maven-publish"
}

version = "$mod_version+$target_version"
group maven_group

base {
    archivesName = archives_name
}

repositories {
    maven { url "https://jitpack.io" }
    // mavenLocal()
}

loom {
    accessWidenerPath = file("src/main/resources/atum.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "com.github.tildejustin:1.16.1-yarn:$minecraft_version-SNAPSHOT" // :v2
    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modImplementation "com.github.tildejustin:SpeedrunAPI:jitpack-SNAPSHOT"
    // only necessary because jitpack doesn't act like a normal maven server,
    // if using mavenLocal with api dependencies in speedrunapi this can be removed
    modImplementation "net.fabricmc.fabric-api:fabric-key-binding-api-v1:1.0.36+fb8d95da77"
    // mavenLocal artifact
    // modImplementation "org.mcsr:SpeedrunAPI:$speedrun_api_version"
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(8)
}

java {
    // withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
    from("LICENSE")
}

publishing {
    publications.create("mavenJava", MavenPublication) {
        from components.java
    }
    repositories {}
}
